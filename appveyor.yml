clone_depth: 1
environment:
  global:
    TOOLCHAIN: stable
  matrix:
  - HOST: x86_64-pc-windows-msvc
  - HOST: x86_64-pc-windows-gnu
install:
  - ps: If ($Env:HOST -eq 'x86_64-pc-windows-gnu') { $Env:PATH += ';C:\msys64\mingw64\bin' }
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/${env:HOST}/rustup-init.exe"
  - rustup-init.exe -y --default-toolchain %TOOLCHAIN% --default-host %HOST% --no-modify-path
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -vV
  - cargo -vV
test_script:
  - cargo +%TOOLCHAIN% test -v
  - cargo +%TOOLCHAIN% test -v -- --ignored
build_script:
  - cargo +%TOOLCHAIN% build --release
  - ps: >-
      $ZIP = "snowchains-${env:APPVEYOR_REPO_TAG_NAME}-${env:HOST}.zip";
      Copy-Item "target\$($Env:TARGET)\release\snowchains.exe" '.\';
      7z a "$ZIP" snowchains.exe README.md LICENSE
deploy:
  - provider: GitHub
    auth_token:
      secure: khL++opdJh5x79PMMTkOJXPXi8D+ijp0os5Bi02rA4DSApOmuF1VuZWpIzyDZ8pi
artifacts:
  path: '*.zip'
cache:
  - C:\Users\appveyor\.cargo\registry
  - target
branches:
  only:
    - /^v\d+\.\d+\.\d+.*$/
notifications:
  - provider: Email
    on_build_success: false

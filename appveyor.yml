environment:
  global:
    TARGET: snowchains
    TOOLCHAIN: stable
    RUST_BACKTRACE: full
  matrix:
    - HOST: x86_64-pc-windows-msvc
    - HOST: x86_64-pc-windows-gnu
    - HOST: i686-pc-windows-msvc
    - HOST: i686-pc-windows-gnu
install:
  - ps: >-
      If ($Env:HOST -eq 'x86_64-pc-windows-gnu') {
        Set-Item Env:Path "C:\msys64\mingw64\bin;$Env:Path";
        gcc --version
      } ElseIf ($Env:HOST -eq 'i686-pc-windows-gnu') {
        Set-Item Env:Path "C:\msys64\mingw32\bin;$Env:Path";
        gcc --version
      }
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/${env:HOST}/rustup-init.exe"
  - rustup-init.exe -y --default-toolchain %TOOLCHAIN% --default-host %HOST% --no-modify-path
  - set PATH=C:\Users\appveyor\.cargo\bin;%PATH%
  - rustc -vV
  - cargo -vV
test_script:
  - set PATH=C:\Python36-x64;%PATH%
  - python -V
  - cargo +%TOOLCHAIN% test
  - cargo +%TOOLCHAIN% test -- --ignored
build: false
before_deploy:
  - cargo +%TOOLCHAIN% build --release
  - ps: >-
      Copy-Item "target\release\${env:TARGET}.exe" .\;
      $PROJECT = "C:\projects\${env:APPVEYOR_PROJECT_NAME}";
      $ZIP = "$PROJECT\${env:TARGET}-${env:APPVEYOR_REPO_TAG_NAME}-${env:HOST}.zip";
      Set-Location C:\projects;
      7z a "$ZIP" "${env:APPVEYOR_PROJECT_NAME}\${env:TARGET}.exe" "${env:APPVEYOR_PROJECT_NAME}\README.md" "${env:APPVEYOR_PROJECT_NAME}\LICENSE";
      Set-Location "$PROJECT";
      Push-AppveyorArtifact "$ZIP"
deploy:
  - provider: GitHub
    artifact: /.*\.zip/
    auth_token:
      secure: khL++opdJh5x79PMMTkOJXPXi8D+ijp0os5Bi02rA4DSApOmuF1VuZWpIzyDZ8pi
    on:
      appveyor_repo_tag: true
branches:
  only:
    - /^v\d+\.\d+\.\d+.*$/
    - master
notifications:
  - provider: Email
    on_build_success: true
